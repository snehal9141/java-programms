Question: There was a city fair going on in wonderland. They had one machine in the exhibition which took numbers and gave that amount of candies in return. The machine has a condition that it only understands odd numbers. A kid has an array of integers with odd and even numbers in it. If any number is even, he can do half the number in the collection at one time. Now he is curious about how many steps he will require to convert all of his numbers into odds. Help him to count the number of steps.

Constraints:

â€¢ 1<=n<=2+105

1<=ai<=109

Input Format

The first line of input contains one integer n, the number of integers in the sequence a. The second line contains positive integers a1,a2,...,an.

Output Format

Print the minimum number of moves to make all array numbers odd.
[16:41, 4/19/2023] Snehal: Print the minimum number of moves to make all array numbers odd.

Sample Testcase #0

Testcase Input

6

40 6 40 3 20 1


Testcase Output
4
[16:41, 4/19/2023] Snehal: Explanation

In the first test case, the optimal sequence is as follows

Before making moves a=[40,6,40,3,20,1] choose even value=6;

Now a [40,3,30,3,20,1]

Choose value =40

Now a=[20,3,20,3,20,1]

Choose c=20

Now a=[10,3,10,3,10,1]

Choose c-10

Now a-[5,3,5,3,5,1]- all numbers are odd now So, all numbers became odd after 4 moves. In less moves than

4, it is not possible

Answer:
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int[]arr=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
	    int count = 0;
        for (int i = 0; i < n; i++) {
            while (arr[i] % 2 == 0) { 
                arr[i] /= 2;
                count++;
            }
        }
		System.out.println(count/2);
	}
}
